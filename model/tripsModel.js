import { ObjectId } from "mongodb";
import mongoose from "mongoose";
import userModel from "./user";

// mongoose.connect(process.env.DATABASE_URI, { useNewUrlParser: true });

const Schema = mongoose.Schema;

const tripSchema = new Schema({
  name: {
    type: String,
    required: [true, "Trip must have a name."],
  },
  destinations: {
    type: Array,
    required: true,
    min: [1, "Trip must have at least 1 destination, got none."],
  },
  startDate: {
    type: Date,
    required: true,
    // TODO: validate: [startDateValidator, "Start Date must be less than End Date and after today"]
  },
  endDate: {
    type: Date,
    required: true,
    // TODO: need to create dateValidator function
    // validate: [dateValidator, "Start Date must be less than End Date"],
  },
  tips: {
    //OpenAI API will generate tips for the trip
    type: String,
    required: false,
  },
  userID: {
    type: mongoose.ObjectId,
    required: true,
  },
});
const tripModel = mongoose.model("Trip", tripSchema);
export default tripModel;
/*
const Trip = mongoose.model("Trip", tripSchema);
//comment the code below out after the first run
const trip = new Trip({
  name: "South East Asia",
  destinations: ["Vietnam", "Thailand", "Cambodia", "Indonesia"],
  startDate: new Date("2023-08-01"),
  endDate: new Date("2023-10-01"),
  tips: "This is supposed to be generated by OpenAI",
});

//This saves the trip above to the database
//comment the code below out after the first run
trip.save();

// Add 3 more trips examples
const trip1 = new Trip({
  name: "USA - East Coast",
  destinations: ["NYC", "Chicago", "Boston", "Miami"],
  startDate: new Date("2024-06-17"),
  endDate: new Date("2024-07-16"),
  tips: "This is supposed to be generated by OpenAI",
});

const trip2 = new Trip({
  name: "South America",
  destinations: ["Argentina", "Brazil", "Peru"],
  startDate: new Date("2023-12-21"),
  endDate: new Date("2024-01-03"),
  tips: "This is supposed to be generated by OpenAI",
});

const trip3 = new Trip({
  name: "Italy",
  destinations: [
    "Rome",
    "Naples",
    "Milan",
    "Turin",
    "Palermo",
    "Genoa",
    "Modena",
  ],
  startDate: new Date("2025-02-19"),
  endDate: new Date("2025-03-01"),
  tips: "This is supposed to be generated by OpenAI",
});

// This saves the trips above to the database
// comment the code below out after the first run
trip1.save();
trip2.save();
trip3.save();

mongoose.connection.close();
*/
